name: EMA-Scrreener Frontend CI/CD Pipeline

on:
  push:
    branches:
      - master  # Adjust branch name as needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache Node.js dependencies to speed up subsequent builds
      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Install Node.js dependencies
        run: npm install

      # Cache Docker layers to speed up subsequent builds
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /var/lib/docker
          key: docker-${{ runner.os }}-${{ hashFiles('**/Dockerfile') }}
          restore-keys: docker-${{ runner.os }}-

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/ema-frontend:$GITHUB_RUN_NUMBER --build-arg PROD_ENV="NEXT_PUBLIC_API_KEY=${{ secrets.NEXT_PUBLIC_API_KEY }}" .

      # Add additional steps here for running tests, linting, etc.

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ema-frontend:$GITHUB_RUN_NUMBER

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no  ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Stop and remove any existing container
           if docker ps -a --format '{{.Names}}' | grep -q '^ema-frontend$'; then
            docker stop ema-frontend || true
            docker rm ema-frontend || true
            docker image prune -af || true
            docker system prune --force || true
          fi 


            # Pull the new image
            docker pull ${{ secrets.DOCKER_USERNAME }}/ema-frontend:${{ github.run_number }}

            # Run the new container
            docker run -d -p 3000:3000 --name ema-frontend ${{ secrets.DOCKER_USERNAME }}/ema-frontend:${{ github.run_number }}
          EOF